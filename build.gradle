plugins {
    id 'java'
    id 'application'
    id 'org.openjfx.javafxplugin' version '0.0.10'
    id 'org.beryx.jlink' version '2.24.1'
    id "io.gitlab.plunts.plantuml" version "2.0.1"
    id 'com.github.johnrengelman.shadow' version '7.1.2'
}

group 'eu.telecomnancy'
version '1.3-SNAPSHOT'

repositories {
    mavenCentral()
}

ext {
    junitVersion = '5.8.2'
}

sourceCompatibility = '17'
targetCompatibility = '17'

tasks.withType(JavaCompile) {
    options.encoding = 'UTF-8'
}



application {
    //mainModule = 'eu.telecomnancy.flashcards'
    //Main
    mainClass = 'eu.telecomnancy.flashcards.Main'
    //Create database
    //mainClass = 'eu.telecomnancy.flashcards.sql.connect.Create'
    //Create tables
    //mainClass = 'eu.telecomnancy.flashcards.sql.connect.InitializeTables'
}

javafx {
    version = '17.0.1'
    modules = ['javafx.controls', 'javafx.fxml']
}


dependencies {
    implementation('org.controlsfx:controlsfx:11.1.1')
    implementation('org.xerial:sqlite-jdbc:3.40.0.0')

    implementation("org.testfx:testfx-core:4.0.16-alpha")
    implementation('org.junit.jupiter:junit-jupiter-api:5.5.1')
    implementation("org.testfx:testfx-junit5:4.0.16-alpha")

}

test {
    useJUnitPlatform()
}

task fatJar(type: Jar) {
    manifest {
        attributes 'Main-Class': 'eu.telecomnancy.flashcards.Main'
    }
    archiveBaseName = "${rootProject.name}"
    from { configurations.compileClasspath.collect { it.isDirectory() ? it : zipTree(it) } 
    setDuplicatesStrategy(DuplicatesStrategy.INCLUDE) }
    with jar
}

classDiagrams {
  diagram {
    name "Visualise Package"
    include packages().withName("eu.telecomnancy.flashcards").nonRecursive()
    include packages().withName("eu.telecomnancy.flashcards.controller").nonRecursive()
    include packages().withName("eu.telecomnancy.flashcards.model").nonRecursive()
    include classes().withName("eu.telecomnancy.flashcards.sql.Initialization")
    writeTo file('classDiagram.puml')
  }
}